worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Shared memory space to limit requests
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    # Shared memory space to limit login requests /blog/login
    limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;

    # Request cache
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    # Shared session ssl cache
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    server {
        listen 80;
        # server_name www.example.com;
        # server_name _; # Usamos "_" como wildcard para cualquier IP/host
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        # server_name www.example.com;
        # server_name _; # Usamos "_" como wildcard para cualquier IP/host

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Frontend - enable caching
        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cache conf
            proxy_cache my_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_pragma $http_authorization;
            proxy_cache_bypass $cookie_PHPSESSID $http_authorization;

            # Status cache header
            add_header X-Proxy-Cache $upstream_cache_status;

            # DDoS protect
            limit_req zone=mylimit burst=20 nodelay;
        }

        # Blog Service
        location /blog {
            proxy_pass http://blog-service:8083;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # DDoS protect
            limit_req zone=mylimit burst=20 nodelay;
        }

        location /blog/login {
            proxy_pass http://blog-service:8083;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # DDoS protect
            limit_req zone=login_limit nodelay; # quitando burst fija el limite estricto
        }

        # File Service
        location /static {
            proxy_pass http://file-service:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # DDoS protect
            limit_req zone=mylimit burst=20 nodelay;
        }

        # Security conf
        client_max_body_size 1M;
        client_body_timeout 5s;
        keepalive_timeout 15s;
        send_timeout 10s;
    }

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
