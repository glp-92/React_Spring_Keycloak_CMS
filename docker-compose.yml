services:

  nginx:
    image: nginx:1.27.1-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/certs/nginx:/etc/nginx/certs # self signed certs
    depends_on: 
    - blog-service
    networks:
      - subnet

  frontend:
    build: ./frontend/clientapp/
    container_name: frontend
    # ports:
    #   - "3000:3000"
    depends_on: 
      - blog-service
    networks:
      - subnet

  file-service:
    build: ./backend/filestorage-service/
    container_name: file-service
    # ports:
    #   - "8000:8000"
    environment:
      FILE_STORAGE_STATIC_FOLDER: ${FILE_STORAGE_STATIC_FOLDER}
      FRONTEND_URL: ${FRONTEND_URL}
    volumes:
      - ./backend/filestorage-service/images:${FILE_STORAGE_STATIC_FOLDER}
    networks:
      - subnet

  blog-service:
    build: ./backend/blog-service/
    container_name: blog-service
    # ports:
    #   - "8083:8083"
    environment:
      MYSQL_HOST: "db"
      MYSQL_BLOG_SERVICE_PASSWORD: ${MYSQL_BLOG_SERVICE_PASSWORD}
      MYSQL_BLOG_SERVICE_USER: ${MYSQL_BLOG_SERVICE_USER}
      KEYCLOAK_BLOG_REALM_ID: ${KEYCLOAK_BLOG_REALM_ID}
      KEYCLOAK_BLOG_CLIENT_ID: ${KEYCLOAK_BLOG_CLIENT_ID}
      KEYCLOAK_BLOG_CLIENT_SECRET: ${KEYCLOAK_BLOG_CLIENT_SECRET}
      KEYCLOAK_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KEYCLOAK_HTTP_PORT: ${KEYCLOAK_HTTP_PORT}
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      mysql_svr:
        condition: service_healthy
    networks:
      - subnet

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: ${KEYCLOAK_HOSTNAME}
    command: start --proxy-headers forwarded
    # ports:
      # - "${KEYCLOAK_HTTP_PORT}:${KEYCLOAK_HTTP_PORT}"
    environment:
      KC_HTTP_PORT: ${KEYCLOAK_HTTP_PORT}
      KC_DB: mysql
      KC_DB_URL_HOST: mysql_svr
      KC_DB_URL_DATABASE: ${KEYCLOAK_DATABASE}
      KC_DB_PASSWORD: ${KEYCLOAK_MYSQL_PASSWORD}
      KC_DB_USERNAME: ${KEYCLOAK_MYSQL_USER}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      # Production
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      # KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/certs/keycloak-server.key.pem
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/certs/keycloak-server.crt.pem
      # Postgres
      # KC_DB: postgres # postgres conf
      # KC_DB_URL_HOST: postgres_svr # postgres conf
      # KC_DB_SCHEMA: public # postgres conf
    depends_on:
      mysql_svr:
        condition: service_healthy
    volumes:
      - ./backend/certs/keycloak/:/opt/keycloak/certs/
    networks:
      - subnet
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M
        reservations:
          cpus: '1'
          memory: 512M
    # depends_on:      
    #   postgres_svr:
    #     condition: service_healthy

  mysql_svr:
    image: mysql:latest
    container_name: db
    #ports:
      #- "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./backend/mysql/db:/var/lib/mysql
      - ./backend/mysql/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u ${MYSQL_BLOG_DB_NAME} --password=${MYSQL_PASSWORD}
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - subnet

  # postgres_svr: 
  #   image: postgres:latest
  #   command: postgres -c 'max_connections=200' && postgres -c 'shared_buffers=24MB'    
  #   environment:
  #     POSTGRES_DB: db_name
  #     POSTGRES_USER: user_name
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - ./db:/var/lib/postgresql/data
  #   healthcheck:
  #     test: "exit 0"
  #   ports:
  #     - "5432:5432"

networks:
  subnet:
    driver: bridge
  # public-subnet:
    # driver: bridge
  # private-subnet:
    # driver: bridge